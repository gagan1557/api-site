{"ast":null,"code":"var _jsxFileName = \"D:\\\\yt site\\\\yt-subscriber-count\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Headline from './components/Headline';\nimport Headline2 from './components/Headline2';\nimport ChannelStats from './components/ChannelStats';\nimport ChannelStat2 from './components/ChannelStat2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst M7_CHANNEL_ID = process.env.REACT_APP_M7_CHANNEL_ID;\nconst M7CS_CHANNEL_ID = process.env.REACT_APP_M7CS_CHANNEL_ID;\nconst API_KEY = process.env.REACT_APP_YT_API_KEY;\nfunction useYouTubeStats(channelId, apiKey) {\n  _s();\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [viewCount, setViewCount] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!channelId || !apiKey) return;\n    async function fetchChannelStats() {\n      try {\n        // Fetch channel stats\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`);\n        const data = await response.json();\n        console.log('YouTube API response for channel', channelId, data); // Log raw API response\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n          setViewCount(data.items[0].statistics.viewCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n      } catch (err) {\n        setError('Failed to fetch channel statistics.');\n      }\n    }\n    fetchChannelStats();\n    const interval = setInterval(fetchChannelStats, 300000);\n    return () => clearInterval(interval);\n  }, [channelId, apiKey]);\n  return {\n    subscriberCount,\n    viewCount,\n    error\n  };\n}\n_s(useYouTubeStats, \"KI8eRdIY/yliIhXh2TMHtGWGj7c=\");\nfunction useQ3Views() {\n  _s2();\n  const [q3Views, setQ3Views] = useState({\n    m7Views: null,\n    m7csViews: null\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchQ3Views() {\n      try {\n        const response = await fetch('../public/q3views.json');\n        if (!response.ok) throw new Error('Failed to load quarterly views');\n        const data = await response.json();\n        setQ3Views({\n          m7Views: data.m7Views,\n          m7csViews: data.m7csViews\n        });\n      } catch (err) {\n        setError('Failed to load quarterly views');\n      }\n    }\n    fetchQ3Views();\n  }, []);\n  return {\n    q3Views,\n    error\n  };\n}\n_s2(useQ3Views, \"Qi1iDOGK6Ivpm2fNTy6vH108ANE=\");\nfunction App() {\n  _s3();\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\n  const {\n    q3Views,\n    error: q3Error\n  } = useQ3Views();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-bg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"center-content\",\n      children: [/*#__PURE__*/_jsxDEV(Headline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two-col-stats\",\n        children: [/*#__PURE__*/_jsxDEV(ChannelStats, {\n          title: \"M7\"\n          // subscriberCount={m7.subscriberCount}\n          ,\n          viewCount: m7.viewCount,\n          error: m7.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelStats, {\n          title: \"M7CS\"\n          // subscriberCount={m7cs.subscriberCount}\n          ,\n          viewCount: m7cs.viewCount,\n          error: m7cs.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Headline2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two-col-stats\",\n        children: [/*#__PURE__*/_jsxDEV(ChannelStat2, {\n          title: \"M7 Q3\",\n          q3Views: q3Views.m7Views,\n          error: q3Error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelStat2, {\n          title: \"M7CS Q3\",\n          q3Views: q3Views.m7csViews,\n          error: q3Error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"cw3GpiUlSMKFqXcgx7C/KkC0bcM=\", false, function () {\n  return [useYouTubeStats, useYouTubeStats, useQ3Views];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Headline","Headline2","ChannelStats","ChannelStat2","jsxDEV","_jsxDEV","M7_CHANNEL_ID","process","env","REACT_APP_M7_CHANNEL_ID","M7CS_CHANNEL_ID","REACT_APP_M7CS_CHANNEL_ID","API_KEY","REACT_APP_YT_API_KEY","useYouTubeStats","channelId","apiKey","_s","subscriberCount","setSubscriberCount","viewCount","setViewCount","error","setError","fetchChannelStats","response","fetch","data","json","console","log","items","length","statistics","err","interval","setInterval","clearInterval","useQ3Views","_s2","q3Views","setQ3Views","m7Views","m7csViews","fetchQ3Views","ok","Error","App","_s3","m7","m7cs","q3Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["D:/yt site/yt-subscriber-count/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Headline from './components/Headline';\nimport Headline2 from './components/Headline2';\nimport ChannelStats from './components/ChannelStats';\nimport ChannelStat2 from './components/ChannelStat2';\n\nconst M7_CHANNEL_ID = process.env.REACT_APP_M7_CHANNEL_ID;\nconst M7CS_CHANNEL_ID = process.env.REACT_APP_M7CS_CHANNEL_ID;\nconst API_KEY = process.env.REACT_APP_YT_API_KEY;\n\nfunction useYouTubeStats(channelId, apiKey) {\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [viewCount, setViewCount] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!channelId || !apiKey) return;\n    async function fetchChannelStats() {\n      try {\n        // Fetch channel stats\n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`\n        );\n        const data = await response.json();\n        console.log('YouTube API response for channel', channelId, data); // Log raw API response\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n          setViewCount(data.items[0].statistics.viewCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n      } catch (err) {\n        setError('Failed to fetch channel statistics.');\n      }\n    }\n    fetchChannelStats();\n    const interval = setInterval(fetchChannelStats, 300000);\n    return () => clearInterval(interval);\n  }, [channelId, apiKey]);\n\n  return { subscriberCount, viewCount, error };\n}\n\nfunction useQ3Views() {\n  const [q3Views, setQ3Views] = useState({ m7Views: null, m7csViews: null });\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchQ3Views() {\n      try {\n        const response = await fetch('../public/q3views.json');\n        if (!response.ok) throw new Error('Failed to load quarterly views');\n        const data = await response.json();\n        setQ3Views({ m7Views: data.m7Views, m7csViews: data.m7csViews });\n      } catch (err) {\n        setError('Failed to load quarterly views');\n      }\n    }\n    fetchQ3Views();\n  }, []);\n\n  return { q3Views, error };\n}\n\nfunction App() {\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\n  const { q3Views, error: q3Error } = useQ3Views();\n\n  return (\n    <div className=\"main-bg\">\n      <Navbar />\n      <main className=\"center-content\">\n        <Headline />\n        <div className=\"two-col-stats\">\n          <ChannelStats\n            title=\"M7\"\n            // subscriberCount={m7.subscriberCount}\n            viewCount={m7.viewCount}\n            error={m7.error}\n          />\n          <ChannelStats\n            title=\"M7CS\"\n            // subscriberCount={m7cs.subscriberCount}\n            viewCount={m7cs.viewCount}\n            error={m7cs.error}\n          />\n        </div>\n        <Headline2 />\n       \n        <div className=\"two-col-stats\">\n          <ChannelStat2\n            title=\"M7 Q3\"\n            q3Views={q3Views.m7Views}\n            error={q3Error}\n          />\n          <ChannelStat2\n            title=\"M7CS Q3\"\n            q3Views={q3Views.m7csViews}\n            error={q3Error}\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}