{"ast":null,"code":"var _jsxFileName = \"D:\\\\yt site\\\\yt-subscriber-count\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHANNEL_ID = 'UCXbyjmDtY58gC4Un3PAaQUA';\nconst API_KEY = 'AIzaSyD-b-eL37uWZ-486iGULh1XJ6-ETMSSgVg'; // <-- User's real API key\n\nfunction App() {\n  _s();\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchSubscriberCount() {\n      try {\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${CHANNEL_ID}&key=${API_KEY}`);\n        const data = await response.json();\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n      } catch (err) {\n        setError('Failed to fetch subscriber count.');\n      }\n    }\n    fetchSubscriberCount();\n    // Optionally, refresh every 30 seconds\n    const interval = setInterval(fetchSubscriberCount, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Live YouTube Subscriber Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Channel ID: \", CHANNEL_ID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), subscriberCount !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '2rem',\n          fontWeight: 'bold'\n        },\n        children: [\"Subscribers: \", subscriberCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"52DmwhZYt0oU3qHUWfqiHv7+xWQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CHANNEL_ID","API_KEY","App","_s","subscriberCount","setSubscriberCount","error","setError","fetchSubscriberCount","response","fetch","data","json","items","length","statistics","err","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","fontWeight","color","_c","$RefreshReg$"],"sources":["D:/yt site/yt-subscriber-count/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst CHANNEL_ID = 'UCXbyjmDtY58gC4Un3PAaQUA';\nconst API_KEY = 'AIzaSyD-b-eL37uWZ-486iGULh1XJ6-ETMSSgVg'; // <-- User's real API key\n\nfunction App() {\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchSubscriberCount() {\n      try {\n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${CHANNEL_ID}&key=${API_KEY}`\n        );\n        const data = await response.json();\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n      } catch (err) {\n        setError('Failed to fetch subscriber count.');\n      }\n    }\n    fetchSubscriberCount();\n    // Optionally, refresh every 30 seconds\n    const interval = setInterval(fetchSubscriberCount, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Live YouTube Subscriber Count</h1>\n        <h2>Channel ID: {CHANNEL_ID}</h2>\n        {subscriberCount !== null ? (\n          <p style={{ fontSize: '2rem', fontWeight: 'bold' }}>\n            Subscribers: {subscriberCount}\n          </p>\n        ) : error ? (\n          <p style={{ color: 'red' }}>{error}</p>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,UAAU,GAAG,0BAA0B;AAC7C,MAAMC,OAAO,GAAG,yCAAyC,CAAC,CAAC;;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,eAAeY,oBAAoBA,CAAA,EAAG;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qEAAqEV,UAAU,QAAQC,OAAO,EAChG,CAAC;QACD,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;UACvCT,kBAAkB,CAACM,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACE,UAAU,CAACX,eAAe,CAAC;QAC9D,CAAC,MAAM;UACLG,QAAQ,CAAC,iCAAiC,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZT,QAAQ,CAAC,mCAAmC,CAAC;MAC/C;IACF;IACAC,oBAAoB,CAAC,CAAC;IACtB;IACA,MAAMS,QAAQ,GAAGC,WAAW,CAACV,oBAAoB,EAAE,KAAK,CAAC;IACzD,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBtB,OAAA;MAAQqB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BtB,OAAA;QAAAsB,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC1B,OAAA;QAAAsB,QAAA,GAAI,cAAY,EAACrB,UAAU;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAChCrB,eAAe,KAAK,IAAI,gBACvBL,OAAA;QAAG2B,KAAK,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAP,QAAA,GAAC,eACrC,EAACjB,eAAe;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,GACFnB,KAAK,gBACPP,OAAA;QAAG2B,KAAK,EAAE;UAAEG,KAAK,EAAE;QAAM,CAAE;QAAAR,QAAA,EAAEf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAEvC1B,OAAA;QAAAsB,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACjB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CA3CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}