{"ast":null,"code":"var _jsxFileName = \"D:\\\\yt site\\\\yt-subscriber-count\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst M7_CHANNEL_ID = process.env.REACT_APP_M7_CHANNEL_ID;\nconst M7CS_CHANNEL_ID = process.env.REACT_APP_M7CS_CHANNEL_ID;\nconst API_KEY = process.env.REACT_APP_YT_API_KEY;\nconsole.log('REACT_APP_M7_CHANNEL_ID:', M7_CHANNEL_ID);\nconsole.log('REACT_APP_M7CS_CHANNEL_ID:', M7CS_CHANNEL_ID);\nconsole.log('REACT_APP_YT_API_KEY:', API_KEY);\nfunction useYouTubeStats(channelId, apiKey) {\n  _s();\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [viewCount, setViewCount] = useState(null);\n  const [liveViewers, setLiveViewers] = useState(null);\n  const [isLive, setIsLive] = useState(false);\n  const [lastTwoVideos, setLastTwoVideos] = useState([]); // [{title, viewCount}]\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!channelId || !apiKey) return;\n    async function fetchChannelStats() {\n      try {\n        // Fetch channel stats\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`);\n        const data = await response.json();\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n          setViewCount(data.items[0].statistics.viewCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n        // Fetch live broadcast (keep for main channel live viewers)\n        const liveResp = await fetch(`https://www.googleapis.com/youtube/v3/search?part=id&channelId=${channelId}&eventType=live&type=video&key=${apiKey}`);\n        const liveData = await liveResp.json();\n        if (liveData.items && liveData.items.length > 0) {\n          setIsLive(true);\n          const liveVideoId = liveData.items[0].id.videoId;\n          // Fetch live viewers\n          const videoResp = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=liveStreamingDetails&id=${liveVideoId}&key=${apiKey}`);\n          const videoData = await videoResp.json();\n          if (videoData.items && videoData.items.length > 0 && videoData.items[0].liveStreamingDetails && videoData.items[0].liveStreamingDetails.concurrentViewers) {\n            setLiveViewers(videoData.items[0].liveStreamingDetails.concurrentViewers);\n          } else {\n            setLiveViewers('0');\n          }\n        } else {\n          setIsLive(false);\n          setLiveViewers(null);\n        }\n        // Fetch last 2 videos and their total views\n        const lastVideosResp = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelId}&maxResults=2&order=date&type=video&key=${apiKey}`);\n        const lastVideosData = await lastVideosResp.json();\n        let lastTwo = [];\n        if (lastVideosData.items && lastVideosData.items.length > 0) {\n          const videoIds = lastVideosData.items.map(item => item.id.videoId).join(',');\n          // Fetch statistics for these videos\n          const statsResp = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=statistics,snippet&id=${videoIds}&key=${apiKey}`);\n          const statsData = await statsResp.json();\n          if (statsData.items && statsData.items.length > 0) {\n            lastTwo = statsData.items.map(item => ({\n              title: item.snippet.title,\n              viewCount: item.statistics.viewCount\n            }));\n          }\n        }\n        setLastTwoVideos(lastTwo);\n      } catch (err) {\n        setError('Failed to fetch channel statistics.');\n      }\n    }\n    fetchChannelStats();\n    const interval = setInterval(fetchChannelStats, 1000);\n    return () => clearInterval(interval);\n  }, [channelId, apiKey]);\n  return {\n    subscriberCount,\n    viewCount,\n    liveViewers,\n    isLive,\n    lastTwoVideos,\n    error\n  };\n}\n_s(useYouTubeStats, \"KiuUgrBdkdbY9MVuG6gSALHNQNA=\");\nfunction App() {\n  _s2();\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-bg\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-nb\",\n          children: \"NB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"logo-media\",\n          children: \"Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-instagram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-brands fa-linkedin-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"center-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"headline\",\n          children: [\"We don't just \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"gradient-text\",\n            children: \"create content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 81\n          }, this), \"We create the \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"gradient-text\",\n            children: \"future of YouTube.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \"NB Media is the undisputed leader in YouTube content creation with a vibrant, Gen Z-friendly culture.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two-col-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"M7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), m7.subscriberCount !== null && m7.viewCount !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Subscribers: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m7.subscriberCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Views: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m7.viewCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Live Viewers: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m7.isLive ? m7.liveViewers : 'Not live'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), m7.lastTwoVideos.map((video, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Last Video \", idx + 1, \" (\", video.title, \"): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [video.viewCount, \" views\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 59\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true) : m7.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat error\",\n            children: m7.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: \"Loading stats...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"channel-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"M7CS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), m7cs.subscriberCount !== null && m7cs.viewCount !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Subscribers: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m7cs.subscriberCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 52\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Views: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m7cs.viewCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Live Viewers: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m7cs.isLive ? m7cs.liveViewers : 'Not live'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), m7cs.lastTwoVideos.map((video, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [\"Last Video \", idx + 1, \" (\", video.title, \"): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [video.viewCount, \" views\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 59\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true) : m7cs.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat error\",\n            children: m7cs.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: \"Loading stats...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"mpkc9PrvMi3Aw7D0hn8ABjjgd8A=\", false, function () {\n  return [useYouTubeStats, useYouTubeStats];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","M7_CHANNEL_ID","process","env","REACT_APP_M7_CHANNEL_ID","M7CS_CHANNEL_ID","REACT_APP_M7CS_CHANNEL_ID","API_KEY","REACT_APP_YT_API_KEY","console","log","useYouTubeStats","channelId","apiKey","_s","subscriberCount","setSubscriberCount","viewCount","setViewCount","liveViewers","setLiveViewers","isLive","setIsLive","lastTwoVideos","setLastTwoVideos","error","setError","fetchChannelStats","response","fetch","data","json","items","length","statistics","liveResp","liveData","liveVideoId","id","videoId","videoResp","videoData","liveStreamingDetails","concurrentViewers","lastVideosResp","lastVideosData","lastTwo","videoIds","map","item","join","statsResp","statsData","title","snippet","err","interval","setInterval","clearInterval","App","_s2","m7","m7cs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","video","idx","_c","$RefreshReg$"],"sources":["D:/yt site/yt-subscriber-count/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst M7_CHANNEL_ID = process.env.REACT_APP_M7_CHANNEL_ID;\nconst M7CS_CHANNEL_ID = process.env.REACT_APP_M7CS_CHANNEL_ID;\nconst API_KEY = process.env.REACT_APP_YT_API_KEY;\n\nconsole.log('REACT_APP_M7_CHANNEL_ID:', M7_CHANNEL_ID);\nconsole.log('REACT_APP_M7CS_CHANNEL_ID:', M7CS_CHANNEL_ID);\nconsole.log('REACT_APP_YT_API_KEY:', API_KEY);\n\nfunction useYouTubeStats(channelId, apiKey) {\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [viewCount, setViewCount] = useState(null);\n  const [liveViewers, setLiveViewers] = useState(null);\n  const [isLive, setIsLive] = useState(false);\n  const [lastTwoVideos, setLastTwoVideos] = useState([]); // [{title, viewCount}]\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!channelId || !apiKey) return;\n    async function fetchChannelStats() {\n      try {\n        // Fetch channel stats\n        const response = await fetch(\n          `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`\n        );\n        const data = await response.json();\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n          setViewCount(data.items[0].statistics.viewCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n        // Fetch live broadcast (keep for main channel live viewers)\n        const liveResp = await fetch(\n          `https://www.googleapis.com/youtube/v3/search?part=id&channelId=${channelId}&eventType=live&type=video&key=${apiKey}`\n        );\n        const liveData = await liveResp.json();\n        if (liveData.items && liveData.items.length > 0) {\n          setIsLive(true);\n          const liveVideoId = liveData.items[0].id.videoId;\n          // Fetch live viewers\n          const videoResp = await fetch(\n            `https://www.googleapis.com/youtube/v3/videos?part=liveStreamingDetails&id=${liveVideoId}&key=${apiKey}`\n          );\n          const videoData = await videoResp.json();\n          if (\n            videoData.items &&\n            videoData.items.length > 0 &&\n            videoData.items[0].liveStreamingDetails &&\n            videoData.items[0].liveStreamingDetails.concurrentViewers\n          ) {\n            setLiveViewers(videoData.items[0].liveStreamingDetails.concurrentViewers);\n          } else {\n            setLiveViewers('0');\n          }\n        } else {\n          setIsLive(false);\n          setLiveViewers(null);\n        }\n        // Fetch last 2 videos and their total views\n        const lastVideosResp = await fetch(\n          `https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelId}&maxResults=2&order=date&type=video&key=${apiKey}`\n        );\n        const lastVideosData = await lastVideosResp.json();\n        let lastTwo = [];\n        if (lastVideosData.items && lastVideosData.items.length > 0) {\n          const videoIds = lastVideosData.items.map(item => item.id.videoId).join(',');\n          // Fetch statistics for these videos\n          const statsResp = await fetch(\n            `https://www.googleapis.com/youtube/v3/videos?part=statistics,snippet&id=${videoIds}&key=${apiKey}`\n          );\n          const statsData = await statsResp.json();\n          if (statsData.items && statsData.items.length > 0) {\n            lastTwo = statsData.items.map(item => ({\n              title: item.snippet.title,\n              viewCount: item.statistics.viewCount\n            }));\n          }\n        }\n        setLastTwoVideos(lastTwo);\n      } catch (err) {\n        setError('Failed to fetch channel statistics.');\n      }\n    }\n    fetchChannelStats();\n    const interval = setInterval(fetchChannelStats, 1000);\n    return () => clearInterval(interval);\n  }, [channelId, apiKey]);\n\n  return { subscriberCount, viewCount, liveViewers, isLive, lastTwoVideos, error };\n}\n\nfunction App() {\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\n\n  return (\n    <div className=\"main-bg\">\n      <nav className=\"navbar\">\n        <div className=\"logo\"><span className=\"logo-nb\">NB</span><span className=\"logo-media\">Media</span></div>\n        <ul className=\"nav-links\">\n          <li><i className=\"fa-brands fa-instagram\" /></li>\n          <li><i className=\"fa-brands fa-linkedin-in\" /></li>\n        </ul>\n      </nav>\n      <main className=\"center-content\">\n        <div className=\"headline-container\">\n          <h1 className=\"headline\">\n            We don't just <span className=\"gradient-text\">create content.</span><br />\n            We create the <span className=\"gradient-text\">future of YouTube.</span>\n          </h1>\n          <p className=\"subtitle\">\n            NB Media is the undisputed leader in YouTube content creation with a vibrant, Gen Z-friendly culture.\n          </p>\n        </div>\n        <div className=\"two-col-stats\">\n          <div className=\"channel-col\">\n            <h2>M7</h2>\n            {m7.subscriberCount !== null && m7.viewCount !== null ? (\n              <>\n                <div className=\"stat\">Subscribers: <span>{m7.subscriberCount}</span></div>\n                <div className=\"stat\">Views: <span>{m7.viewCount}</span></div>\n                <div className=\"stat\">Live Viewers: <span>{m7.isLive ? m7.liveViewers : 'Not live'}</span></div>\n                {m7.lastTwoVideos.map((video, idx) => (\n                  <div className=\"stat\" key={idx}>\n                    Last Video {idx + 1} ({video.title}): <span>{video.viewCount} views</span>\n                  </div>\n                ))}\n              </>\n            ) : m7.error ? (\n              <div className=\"stat error\">{m7.error}</div>\n            ) : (\n              <div className=\"stat\">Loading stats...</div>\n            )}\n          </div>\n          <div className=\"channel-col\">\n            <h2>M7CS</h2>\n            {m7cs.subscriberCount !== null && m7cs.viewCount !== null ? (\n              <>\n                <div className=\"stat\">Subscribers: <span>{m7cs.subscriberCount}</span></div>\n                <div className=\"stat\">Views: <span>{m7cs.viewCount}</span></div>\n                <div className=\"stat\">Live Viewers: <span>{m7cs.isLive ? m7cs.liveViewers : 'Not live'}</span></div>\n                {m7cs.lastTwoVideos.map((video, idx) => (\n                  <div className=\"stat\" key={idx}>\n                    Last Video {idx + 1} ({video.title}): <span>{video.viewCount} views</span>\n                  </div>\n                ))}\n              </>\n            ) : m7cs.error ? (\n              <div className=\"stat error\">{m7cs.error}</div>\n            ) : (\n              <div className=\"stat\">Loading stats...</div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}