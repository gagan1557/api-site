{"ast":null,"code":"var _jsxFileName = \"D:\\\\yt site\\\\yt-subscriber-count\\\\src\\\\components\\\\Headline.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport ChannelStats from './ChannelStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst M7_CHANNEL_ID = process.env.REACT_APP_M7_CHANNEL_ID;\nconst M7CS_CHANNEL_ID = process.env.REACT_APP_M7CS_CHANNEL_ID;\nconst API_KEY = process.env.REACT_APP_YT_API_KEY;\nfunction useYouTubeStats(channelId, apiKey) {\n  _s();\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [viewCount, setViewCount] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!channelId || !apiKey) return;\n    async function fetchChannelStats() {\n      try {\n        // Fetch channel stats\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`);\n        const data = await response.json();\n        console.log('YouTube API response for channel', channelId, data); // Log raw API response\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n          setViewCount(data.items[0].statistics.viewCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n      } catch (err) {\n        setError('Failed to fetch channel statistics.');\n      }\n    }\n    fetchChannelStats();\n    const interval = setInterval(fetchChannelStats, 300000);\n    return () => clearInterval(interval);\n  }, [channelId, apiKey]);\n  return {\n    subscriberCount,\n    viewCount,\n    error\n  };\n}\n_s(useYouTubeStats, \"KI8eRdIY/yliIhXh2TMHtGWGj7c=\");\nfunction Headline() {\n  _s2();\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"headline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"headline\",\n      children: [\"OUR THIS YEAR GOAL \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gradient-text\",\n        children: [\"createviewCount=\", m7.viewCount, \"content.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 105\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"two-col-stats\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelStats, {\n        title: \"M7\"\n        // subscriberCount={m7.subscriberCount}\n        ,\n        viewCount: m7.viewCount,\n        error: m7.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChannelStats, {\n        title: \"M7CS\"\n        // subscriberCount={m7cs.subscriberCount}\n        ,\n        viewCount: m7cs.viewCount,\n        error: m7cs.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s2(Headline, \"mpkc9PrvMi3Aw7D0hn8ABjjgd8A=\", false, function () {\n  return [useYouTubeStats, useYouTubeStats];\n});\n_c = Headline;\nexport default Headline;\nvar _c;\n$RefreshReg$(_c, \"Headline\");","map":{"version":3,"names":["React","useEffect","useState","ChannelStats","jsxDEV","_jsxDEV","M7_CHANNEL_ID","process","env","REACT_APP_M7_CHANNEL_ID","M7CS_CHANNEL_ID","REACT_APP_M7CS_CHANNEL_ID","API_KEY","REACT_APP_YT_API_KEY","useYouTubeStats","channelId","apiKey","_s","subscriberCount","setSubscriberCount","viewCount","setViewCount","error","setError","fetchChannelStats","response","fetch","data","json","console","log","items","length","statistics","err","interval","setInterval","clearInterval","Headline","_s2","m7","m7cs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["D:/yt site/yt-subscriber-count/src/components/Headline.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport ChannelStats from './ChannelStats';\r\n\r\nconst M7_CHANNEL_ID = process.env.REACT_APP_M7_CHANNEL_ID;\r\nconst M7CS_CHANNEL_ID = process.env.REACT_APP_M7CS_CHANNEL_ID;\r\nconst API_KEY = process.env.REACT_APP_YT_API_KEY;\r\n\r\nfunction useYouTubeStats(channelId, apiKey) {\r\n  const [subscriberCount, setSubscriberCount] = useState(null);\r\n  const [viewCount, setViewCount] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!channelId || !apiKey) return;\r\n    async function fetchChannelStats() {\r\n      try {\r\n        // Fetch channel stats\r\n        const response = await fetch(\r\n          `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`\r\n        );\r\n        const data = await response.json();\r\n        console.log('YouTube API response for channel', channelId, data); // Log raw API response\r\n        if (data.items && data.items.length > 0) {\r\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\r\n          setViewCount(data.items[0].statistics.viewCount);\r\n        } else {\r\n          setError('Channel not found or API error.');\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to fetch channel statistics.');\r\n      }\r\n    }\r\n    fetchChannelStats();\r\n    const interval = setInterval(fetchChannelStats, 300000);\r\n    return () => clearInterval(interval);\r\n  }, [channelId, apiKey]);\r\n\r\n  return { subscriberCount, viewCount, error };\r\n}\r\n\r\nfunction Headline() {\r\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\r\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\r\n  return (\r\n    <div className=\"headline-container\">\r\n      <h1 className=\"headline\">\r\n        OUR THIS YEAR GOAL <span className=\"gradient-text\">createviewCount={m7.viewCount}content.</span><br />\r\n        {/* We create the <span className=\"gradient-text\">future of YouTube.</span> */}\r\n      </h1>\r\n      {<div className=\"two-col-stats\">\r\n          <ChannelStats\r\n            title=\"M7\"\r\n            // subscriberCount={m7.subscriberCount}\r\n            viewCount={m7.viewCount}\r\n            error={m7.error}\r\n          />\r\n          <ChannelStats\r\n            title=\"M7CS\"\r\n            // subscriberCount={m7cs.subscriberCount}\r\n            viewCount={m7cs.viewCount}\r\n            error={m7cs.error}\r\n          />\r\n        </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Headline; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}