{"ast":null,"code":"var _jsxFileName = \"D:\\\\yt site\\\\yt-subscriber-count\\\\src\\\\components\\\\Headline.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport ChannelStats from './ChannelStats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useYouTubeStats(channelId, apiKey) {\n  _s();\n  const [subscriberCount, setSubscriberCount] = useState(null);\n  const [viewCount, setViewCount] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!channelId || !apiKey) return;\n    async function fetchChannelStats() {\n      try {\n        // Fetch channel stats\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`);\n        const data = await response.json();\n        console.log('YouTube API response for channel', channelId, data); // Log raw API response\n        if (data.items && data.items.length > 0) {\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\n          setViewCount(data.items[0].statistics.viewCount);\n        } else {\n          setError('Channel not found or API error.');\n        }\n      } catch (err) {\n        setError('Failed to fetch channel statistics.');\n      }\n    }\n    fetchChannelStats();\n    const interval = setInterval(fetchChannelStats, 300000);\n    return () => clearInterval(interval);\n  }, [channelId, apiKey]);\n  return {\n    subscriberCount,\n    viewCount,\n    error\n  };\n}\n_s(useYouTubeStats, \"KI8eRdIY/yliIhXh2TMHtGWGj7c=\");\nfunction Headline() {\n  _s2();\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"headline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"headline\",\n      children: [\"OUR THIS YEAR GOAL \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gradient-text\",\n        children: \"create content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChannelStats, {\n      title: \"M7\"\n      // subscriberCount={m7.subscriberCount}\n      ,\n      viewCount: m7.viewCount,\n      error: m7.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ChannelStats, {\n      title: \"M7CS\"\n      // subscriberCount={m7cs.subscriberCount}\n      ,\n      viewCount: m7cs.viewCount,\n      error: m7cs.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s2(Headline, \"mpkc9PrvMi3Aw7D0hn8ABjjgd8A=\", false, function () {\n  return [useYouTubeStats, useYouTubeStats];\n});\n_c = Headline;\nexport default Headline;\nvar _c;\n$RefreshReg$(_c, \"Headline\");","map":{"version":3,"names":["React","ChannelStats","jsxDEV","_jsxDEV","useYouTubeStats","channelId","apiKey","_s","subscriberCount","setSubscriberCount","useState","viewCount","setViewCount","error","setError","useEffect","fetchChannelStats","response","fetch","data","json","console","log","items","length","statistics","err","interval","setInterval","clearInterval","Headline","_s2","m7","M7_CHANNEL_ID","API_KEY","m7cs","M7CS_CHANNEL_ID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["D:/yt site/yt-subscriber-count/src/components/Headline.jsx"],"sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport ChannelStats from './ChannelStats';\r\nfunction useYouTubeStats(channelId, apiKey) {\r\n  const [subscriberCount, setSubscriberCount] = useState(null);\r\n  const [viewCount, setViewCount] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!channelId || !apiKey) return;\r\n    async function fetchChannelStats() {\r\n      try {\r\n        // Fetch channel stats\r\n        const response = await fetch(\r\n          `https://www.googleapis.com/youtube/v3/channels?part=statistics&id=${channelId}&key=${apiKey}`\r\n        );\r\n        const data = await response.json();\r\n        console.log('YouTube API response for channel', channelId, data); // Log raw API response\r\n        if (data.items && data.items.length > 0) {\r\n          setSubscriberCount(data.items[0].statistics.subscriberCount);\r\n          setViewCount(data.items[0].statistics.viewCount);\r\n        } else {\r\n          setError('Channel not found or API error.');\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to fetch channel statistics.');\r\n      }\r\n    }\r\n    fetchChannelStats();\r\n    const interval = setInterval(fetchChannelStats, 300000);\r\n    return () => clearInterval(interval);\r\n  }, [channelId, apiKey]);\r\n\r\n  return { subscriberCount, viewCount, error };\r\n}\r\n\r\nfunction Headline() {\r\n  const m7 = useYouTubeStats(M7_CHANNEL_ID, API_KEY);\r\n  const m7cs = useYouTubeStats(M7CS_CHANNEL_ID, API_KEY);\r\n  return (\r\n    <div className=\"headline-container\">\r\n      <h1 className=\"headline\">\r\n        OUR THIS YEAR GOAL <span className=\"gradient-text\">create content.</span><br />\r\n        {/* We create the <span className=\"gradient-text\">future of YouTube.</span> */}\r\n      </h1>\r\n      {/* {<div className=\"two-col-stats\"> */}\r\n          <ChannelStats\r\n            title=\"M7\"\r\n            // subscriberCount={m7.subscriberCount}\r\n            viewCount={m7.viewCount}\r\n            error={m7.error}\r\n          />\r\n          <ChannelStats\r\n            title=\"M7CS\"\r\n            // subscriberCount={m7cs.subscriberCount}\r\n            viewCount={m7cs.viewCount}\r\n            error={m7cs.error}\r\n          />\r\n        {/* </div>} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Headline; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}